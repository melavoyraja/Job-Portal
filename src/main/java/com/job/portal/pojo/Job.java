package com.job.portal.pojo;
// Generated Apr 4, 2016 11:54:04 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.springframework.format.annotation.DateTimeFormat;

/**
 * Job generated by hbm2java
 */
@Entity
@Table(name = "job", catalog = "jobportal")
public class Job implements java.io.Serializable {

	private Integer jobId;
	private Employer employer;
	private Jobtype jobtype;
//	private String jobtype;
	@Valid
	private Location location;
	@Size(min = 2,max = 150, message="Job Title must be between {min} and {max} characters long")
	private String jobTitle;
	@Size(min = 20,max = 255, message="Job Description must be between {min} and {max} characters long")
	private String jobDescription;
	@Size(min = 20,max = 255, message="Desired Skill must be between {min} and {max} characters long")
	private String desiredSkills;
	private Date datePosted;
	private Date deadlinToApply;
	private Set<Appliedjobs> appliedjobses = new HashSet<Appliedjobs>(0);

	public Job() {
	}

	public Job(Employer employer, Jobtype jobtype, Location location, String jobTitle, String jobDescription,
			String desiredSkills, Date datePosted) {
		this.employer = employer;
		this.jobtype = jobtype;
		this.location = location;
		this.jobTitle = jobTitle;
		this.jobDescription = jobDescription;
		this.desiredSkills = desiredSkills;
		this.datePosted = datePosted;
	}

	public Job(Employer employer, Jobtype jobtype, Location location, String jobTitle, String jobDescription,
			String desiredSkills, Date datePosted, Date deadlinToApply, Set<Appliedjobs> appliedjobses) {
		this.employer = employer;
		this.jobtype = jobtype;
		this.location = location;
		this.jobTitle = jobTitle;
		this.jobDescription = jobDescription;
		this.desiredSkills = desiredSkills;
		this.datePosted = datePosted;
		this.deadlinToApply = deadlinToApply;
		this.appliedjobses = appliedjobses;
	}

//	public String getJobtype() {
//		return jobtype;
//	}
//
//	public void setJobtype(String jobtype) {
//		this.jobtype = jobtype;
//	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "jobID", unique = true, nullable = false)
	public Integer getJobId() {
		return this.jobId;
	}

	public void setJobId(Integer jobId) {
		this.jobId = jobId;
	}

	@ManyToOne(fetch = FetchType.EAGER,cascade=CascadeType.ALL)
	@JoinColumn(name = "employerID",nullable = false)
	public Employer getEmployer() {
		return this.employer;
	}

	public void setEmployer(Employer employer) {
		this.employer = employer;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "jobTypeID", nullable = false)
	public Jobtype getJobtype() {
		return this.jobtype;
	}

	public void setJobtype(Jobtype jobtype) {
		this.jobtype = jobtype;
	}

	@ManyToOne(fetch = FetchType.EAGER,cascade=CascadeType.ALL)
	@JoinColumn(name = "locationID", nullable = false)
	public Location getLocation() {
		return this.location;
	}

	public void setLocation(Location location) {
		this.location = location;
	}

	@Column(name = "jobTitle", nullable = false, length = 150)
	public String getJobTitle() {
		return this.jobTitle;
	}

	public void setJobTitle(String jobTitle) {
		this.jobTitle = jobTitle;
	}

	@Column(name = "jobDescription", nullable = false, length = 255)
	public String getJobDescription() {
		return this.jobDescription;
	}

	public void setJobDescription(String jobDescription) {
		this.jobDescription = jobDescription;
	}

	@Column(name = "desiredSkills", nullable = false, length = 255)
	public String getDesiredSkills() {
		return this.desiredSkills;
	}

	public void setDesiredSkills(String desiredSkills) {
		this.desiredSkills = desiredSkills;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "datePosted", nullable = false, length = 10)
	public Date getDatePosted() {
		return this.datePosted;
	}

	public void setDatePosted(Date datePosted) {
		this.datePosted = datePosted;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "deadlinToApply", length = 10)
	public Date getDeadlinToApply() {
		return this.deadlinToApply;
	}

	public void setDeadlinToApply(Date deadlinToApply) {
		this.deadlinToApply = deadlinToApply;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "job")
	public Set<Appliedjobs> getAppliedjobses() {
		return this.appliedjobses;
	}

	public void setAppliedjobses(Set<Appliedjobs> appliedjobses) {
		this.appliedjobses = appliedjobses;
	}

}

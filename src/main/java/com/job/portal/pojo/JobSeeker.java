package com.job.portal.pojo;
// Generated Apr 4, 2016 11:54:04 PM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.validation.Valid;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.Range;

/**
 * Jobseeker generated by hbm2java
 */
@Entity
@Table(name = "jobseeker", catalog = "jobportal")
public class JobSeeker implements java.io.Serializable {

	private Integer jobSeekerId;
	@Valid
	private User user;
	@Range(min=0,max=40,message="Enter a valid years of experience")
	private int yearsExperience;
	private Set<Appliedjobs> appliedjobses = new HashSet<Appliedjobs>(0);

	public JobSeeker() {
		
	}

	public JobSeeker(User user, int yearsExperience) {
		this.user = user;
		this.yearsExperience = yearsExperience;
	}

	public JobSeeker(User user, int yearsExperience, Set<Appliedjobs> appliedjobses) {
		this.user = user;
		this.yearsExperience = yearsExperience;
		this.appliedjobses = appliedjobses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "jobSeekerID", unique = true, nullable = false)
	public Integer getJobSeekerId() {
		return this.jobSeekerId;
	}

	public void setJobSeekerId(Integer jobSeekerId) {
		this.jobSeekerId = jobSeekerId;
	}

	@ManyToOne(fetch = FetchType.EAGER,cascade=CascadeType.ALL)
	@JoinColumn(name = "userID", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "yearsExperience", nullable = false)
	public int getYearsExperience() {
		return this.yearsExperience;
	}

	public void setYearsExperience(int yearsExperience) {
		this.yearsExperience = yearsExperience;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "jobseeker")
	public Set<Appliedjobs> getAppliedjobses() {
		return this.appliedjobses;
	}

	public void setAppliedjobses(Set<Appliedjobs> appliedjobses) {
		this.appliedjobses = appliedjobses;
	}

}

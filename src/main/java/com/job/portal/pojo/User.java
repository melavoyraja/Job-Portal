package com.job.portal.pojo;
// Generated Apr 4, 2016 11:54:04 PM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.NotBlank;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "jobportal")
public class User implements java.io.Serializable {
	
	private Integer userId;
	private Roles roles;
	@NotBlank
	@Size(min = 2,max = 100, message="First Name '${validatedValue}' must be between {min} and {max} characters long")
	private String firstName;
	@NotBlank
	@Size(min = 2,max = 100, message="Last Name '${validatedValue}' must be between {min} and {max} characters long")
	private String lastName;
	@NotBlank
	@Email(message="Enter a valid Email Address")
	private String emailId;
	@NotBlank
	@Size(min = 2,max = 10, message="Password must be between {min} and {max} characters long")
	private String password;
	private Employer employer;
	private Admin admin;
	private JobSeeker jobseeker;

	public User() {
	}

	public User(Roles roles, String firstName, String lastName, String emailId, String password) {
		this.roles = roles;
		this.firstName = firstName;
		this.lastName = lastName;
		this.emailId = emailId;
		this.password = password;
	}

	public User(Roles roles, String firstName, String lastName, String emailId, String password,Employer employer, Admin admin, JobSeeker jobseeker) {
		this.roles = roles;
		this.firstName = firstName;
		this.lastName = lastName;
		this.emailId = emailId;
		this.password = password;
		this.employer = employer;
		this.admin = admin;
		this.jobseeker = jobseeker;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "userID", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "roleID", nullable = false)
	public Roles getRoles() {
		return this.roles;
	}

	public void setRoles(Roles roles) {
		this.roles = roles;
	}

	@Column(name = "firstName", nullable = false, length = 100)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "LastName", nullable = false, length = 100)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "emailID", nullable = false, length = 100)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Column(name = "password", nullable = false, length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@OneToOne(fetch = FetchType.EAGER, mappedBy = "user")
	public Employer getEmployer() {
		return this.employer;
	}

	public void setEmployer(Employer employer) {
		this.employer = employer;
	}

	@OneToOne(fetch = FetchType.EAGER, mappedBy = "user")
	public Admin getAdmin() {
		return this.admin;
	}

	public void setAdmin(Admin admin) {
		this.admin = admin;
	}

	@OneToOne(fetch = FetchType.EAGER, mappedBy = "user")
	public JobSeeker getJobseeker() {
		return this.jobseeker;
	}

	public void setJobseeker(JobSeeker jobseeker) {
		this.jobseeker = jobseeker;
	}

}
